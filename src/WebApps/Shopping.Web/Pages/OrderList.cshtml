@page
@model Shopping.Web.Pages.OrderListModel
@{
    ViewData["Title"] = "Order";
}

<div class="container">
    <div class="row">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-page="Index">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Order</li>
                </ol>
            </nav>
        </div>
    </div>
</div>

<div class="container mb-4">
    <div class="row">
        <div class="col-12">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">Order Number </th>
                            <th scope="col">Order Name</th>
                            <th scope="col">First Name</th>
                            <th scope="col">Last Name</th>
                            <th scope="col">Email</th>
                            <th scope="col">AddressLine</th>
                            <th scope="col">CardName</th>
                            <th scope="col">OrderStatus</th>
                            <th scope="col" class="text-right">TotalPrice</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var order in Model.Orders)
                        {
                            <tr>
                                <td>
                                    <a href="#"
                                       class="btn btn-link order-details-link"
                                       data-order-number="@order.OrderNumber">
                                       @order.OrderNumber
                                    </a>
                                </td>
                                <td>@order.OrderName</td>
                                <td>@order.ShippingAddress.FirstName</td>
                                <td>@order.ShippingAddress.LastName</td>
                                <td>@order.ShippingAddress.EmailAddress</td>
                                <td>@order.ShippingAddress.AddressLine</td>
                                <td>@order.Payment.CardName</td>
                                <td>@order.Status</td>
                                <td class="text-right">@order.OrderItems.Sum(x => x.Price * x.Quantity) $</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col mb-2">
            <div class="row">
                <div class="col-sm-12  col-md-6">
                    <a asp-page="Product" class="btn btn-lg btn-block btn-success">Continue Shopping</a>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Table to show ordered items -->
                <table class="table table-striped" id="orderDetailsTable" style="display: none;">
                    <thead>
                        <tr>
                            <th>Item Name</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody id="orderDetailsBody"></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Attach click event to all order number links
        const orderLinks = document.querySelectorAll(".order-details-link");
        const orderDetailsModal = new bootstrap.Modal(document.getElementById("orderDetailsModal"));
        const table = document.getElementById("orderDetailsTable");
        const tableBody = document.getElementById("orderDetailsBody");

        // Assuming Model.Orders data is available as a JSON object in a JavaScript variable
        const ordersData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Orders));
        
        orderLinks.forEach(link => {
            link.addEventListener("click", function (e) {
                e.preventDefault();

                const orderNumber = this.getAttribute("data-order-number");

                // Clear previous data
                tableBody.innerHTML = "";
                table.style.display = "none";

                 // Find the selected order
                const selectedOrder = ordersData.find(order => order.OrderNumber === orderNumber);
                console.log('selected order items: ');
                console.log(selectedOrder.OrderItems);

                if (selectedOrder && selectedOrder.OrderItems) {
                    // Populate table with order items
                    selectedOrder.OrderItems.forEach(item => {
                        const row = document.createElement("tr");
                        row.innerHTML = `
                            <td>${item.ProductId}</td>
                            <td>${item.Quantity}</td>
                            <td>${item.Price} $</td>
                            <td>${item.Quantity * item.Price} $</td>
                        `;
                        tableBody.appendChild(row);
                    });

                    table.style.display = "table";
                } else {
                    alert("Order details not found.");
                }

                // Show the modal
                orderDetailsModal.show();
            });
        });

        // Cleanup modal content when it is closed
        document.getElementById("orderDetailsModal").addEventListener("hidden.bs.modal", function () {
            console.log("hidden.bs.modal executing...");
            // Clear the table body
            tableBody.innerHTML = "";
            // Hide the table and loader for consistency
            table.style.display = "none";
           // loader.style.display = "none";
        });
    });
</script>